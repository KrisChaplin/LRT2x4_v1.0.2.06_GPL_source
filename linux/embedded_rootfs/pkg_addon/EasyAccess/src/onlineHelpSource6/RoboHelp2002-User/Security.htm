<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Security</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=508>
<meta name=layout-width content=613>
<meta name=date content="02 1, 2004 4:03:01 PM">


<!--(Links)=========================================================-->

<link rel=StyleSheet href=default.css>



</head>

<!--(Body)==========================================================-->


<body>

<h4><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Security</h4>

<p>SSL (Secure Sockets Layer) Encryption encrypts all data between your 
 remote machine and the private network. The following provides a glossary 
 of security protocols that are used by EasyAccess to encrypt and secure 
 data.</p>

<p>&nbsp;</p>

<p><span style="font-weight: bold;">Encryption</span> enables users to 
 encode or scramble data, making the data unreadable to unauthorized viewers. 
 Encryption provides a secure means for individuals to communicate privately 
 over the Internet. </p>

<p>&nbsp;</p>

<p><span style="font-weight: bold;">Public Key Encryption</span>, <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->also 
 called asymmetric encryption, consists of a public and a private key for 
 encrypting and decrypting data. With public key encryption, an entity, 
 such as a secure web site, will generate a public and a private key. For 
 example, a secure web server would send a user accessing the web site 
 a public key. The public key would allow the user’s web browser to decrypt 
 data that had been encrypted with the private key. The user’s web browser 
 can also transparently encrypt data using the public key and this data 
 can only be decrypted by the secure web server’s private key. Public key 
 encryption allows the user to confirm the identity of the web site through 
 an SSL certificate. </p>

<p>&nbsp;</p>

<p><span style="font-weight: bold;">An SSL Certificate</span> <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->is 
 an electronic document that identifies a company, server or individual 
 and correlates that identity with a public key. </p>

<p>&nbsp;</p>

<p><span style="font-weight: bold;">A Certificate Authority (CA)</span> 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->validates 
 the identity of companies, servers or individuals that request certification. 
 After the request is verified, the CA generates a certificate that authenticates 
 the identity of the requestor. The CA may be an independent third party, 
 such as Verisign or Entrust, or it can be an organization’s own proprietary 
 certificate authority if the organization has developed a public key infrastructure.</p>

<p>&nbsp;</p>

<p><span style="font-weight: bold;">Secure Sockets Layer (SSL)</span> is 
 a protocol that operates between TCP/IP and application protocols such 
 as HTTP and FTP. SSL allows a secure server to authenticate itself to 
 an SSL-enabled client, such as a web browser or an email client. The client 
 may also need to authenticate itself to the server. Once the authentication 
 and negotiation of encryption information is completed, the server and 
 client can establish an encrypted connection.</p>

</body>

</html>
