<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>SSL Handshake</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=0>
<meta name=layout-height content=0>
<meta name=layout-width content=0>


<!--(Links)=========================================================-->

<link rel=stylesheet href=default_ns.css>



<!--(Style Sheets)==================================================-->

<style>
<!--

ol.whs1 {
	list-style: decimal;
}

p.whs2 {
	text-align: center;
	font-size: 12pt;
	font-family: Arial;
	color: #ff0000;
}

/*=(Generated Code)=================================================*/
/*=(WARNING: DO NOT EDIT OR DELETE THIS SECTION!)===================*/
/*begin!kadov{{=====================================================*/ 
LI.kadov-p-Cwhs2 {
	text-align: center;
	font-size: 12pt;
	font-family: Arial;
	color: #ff0000;
}
/*}}end!kadov=======================================================*/ 



-->
</style>

<style>
<!--

div.WebHelpPopupMenu {
	position: absolute;
	left: 0px;
	top: 0px;
	z-index: 4;
	visibility: hidden;
}

-->
</style>

<!--(Scripts)=======================================================-->

<script type="text/javascript"
		language=JavaScript
		title=WebHelpSplitCss><!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='default.css'>");}
//--></script>

<script type="text/javascript"
		language=JavaScript
		title=WebHelpInlineScript><!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//--></script>

<script type="text/javascript"
		language=javascript1.2
		src="whmsg.js"></script>

<script type="text/javascript"
		language=javascript
		src="whver.js"></script>

<script type="text/javascript"
		language=javascript1.2
		src="whproxy.js"></script>

<script type="text/javascript"
		language=javascript1.2
		src="whutils.js"></script>

<script type="text/javascript"
		language=javascript1.2
		src="whtopic.js"></script>

</head>

<!--(Body)==========================================================-->


<body>

<script type="text/javascript"
		language=javascript1.2><!--
if (window.gbWhTopic)
{
	if (window.addTocInfo)
	{
	addTocInfo("Security\nSSL Handshake Process");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(0);

	if (window.setRelStartPage)
	{
	setRelStartPage("ConfigGuide.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();
//--></script>

<h4>&nbsp;SSL Handshake</h4>

<p>An example of the standard steps required for an SSL session to be established 
 between a user and the EasyAccess SSL VPN gateway:</p>

<p>&nbsp;</p>

<ol class=whs1
	style="list-style: decimal;"
	type=1>
	
	<li class=kadov-p><p>When a user attempts to connect to the SSL VPN 
 gateway, the user’s web browser sends the SSL VPN gateway encryption information, 
 such as the types of encryption the browser supports.<br>&nbsp;</p></li>
	
	<li class=kadov-p><p>The SSL VPN gateway sends the user its own encryption 
 information, including an SSL certificate with a public encryption key.<br>&nbsp;</p></li>
	
	<li class=kadov-p><p>The web browser validates the SSL certificate 
 with the Certificate Authority identified by the SSL certificate. <br>&nbsp;</p></li>
	
	<li class=kadov-p><p>The web browser then generates a “pre-master” 
 encryption key, encrypts the pre-master key using the public key included 
 with the SSL certificate and sends the encrypted pre-master key to the 
 SSL VPN gateway.<br>&nbsp;</p></li>
	
	<li class=kadov-p><p>The SSL VPN gateway uses the pre-master key to 
 create a master key and sends the new master key to the user’s web browser.<br>&nbsp;</p></li>
	
	<li class=kadov-p><p>The browser and the SSL VPN gateway use the master 
 key and the agreed upon encryption algorithm to establish an SSL connection. 
 From this point on, the user and the SSL VPN gateway will encrypt and 
 decrypt data using the same encryption key. This is called symmetric encryption.<br>&nbsp;</p></li>
	
	<li class=kadov-p><p>Once the SSL connection is established, the EasyAccess 
 SSL VPN gateway will encrypt and send the web browser the SSL VPN gateway 
 login page. <br>&nbsp;</p></li>
	
	<li class=kadov-p><p>The user submits his user name, password and domain 
 name.<br>&nbsp;</p></li>
	
	<li class=kadov-p><p>If the user’s domain name requires authentication 
 through a Radius, LDAP, NT Domain, or Active Directory Server, the SSL 
 VPN gateway forwards the user’s information to the appropriate server 
 for authentication.<br>&nbsp;</p></li>
	
	<li class=kadov-p><p>Once authenticated, the user can access the SSL 
 VPN portal.</p></li>
</ol>

<div>
&nbsp; 
</div>

<p>&nbsp;</p>

<div>
&nbsp; 
</div>

<script type="text/javascript"
		language=javascript1.2><!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//--></script>

</body>

</html>
