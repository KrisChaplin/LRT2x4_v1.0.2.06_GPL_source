trap ' ' 1 2 15
httpd=${AP_BASE}/bin/httpd
smm=${AP_BASE}/bin/smm
firebase=${AP_BASE}/bin/firebase
ftpsession=${AP_BASE}/bin/ftpsession
graphd=${AP_BASE}/bin/graphd

RETVAL=0 

BOOTUP=color
RES_COL=60
MOVE_TO_COL="echo -en \\033[${RES_COL}G"
SETCOLOR_SUCCESS="echo -en \\033[1;32m"
SETCOLOR_FAILURE="echo -en \\033[1;31m"
SETCOLOR_WARNING="echo -en \\033[1;33m"
SETCOLOR_NORMAL="echo -en \\033[0;39m"

function echo_success() {
  [ "$BOOTUP" = "color" ] && $MOVE_TO_COL
  echo -n "[  "
  [ "$BOOTUP" = "color" ] && $SETCOLOR_SUCCESS
  echo -n $"OK"
  [ "$BOOTUP" = "color" ] && $SETCOLOR_NORMAL
  echo -n "  ]"
  echo -e "\r"
  return 0
}

function echo_failure() {
  [ "$BOOTUP" = "color" ] && $MOVE_TO_COL
  echo -n "["
  [ "$BOOTUP" = "color" ] && $SETCOLOR_FAILURE
  echo -n $"FAILED"
  [ "$BOOTUP" = "color" ] && $SETCOLOR_NORMAL
  echo -n "]"
  echo -e "\r"
  return 1
}

function echo_running() {
  [ "$BOOTUP" = "color" ] && $MOVE_TO_COL
  echo -n "[  "
  [ "$BOOTUP" = "color" ] && $SETCOLOR_SUCCESS
  echo -n $"RUNNING"
  [ "$BOOTUP" = "color" ] && $SETCOLOR_NORMAL
  echo -n "  ]"
  echo -e "\r"
  return 0
}

function echo_dead() {
  [ "$BOOTUP" = "color" ] && $MOVE_TO_COL
  echo -n "["
  [ "$BOOTUP" = "color" ] && $SETCOLOR_FAILURE
  echo -n $"DEAD"
  [ "$BOOTUP" = "color" ] && $SETCOLOR_NORMAL
  echo -n "]"
  echo -e "\r"
  return 1
}

function start() {
        echo -n "Cleaning Temporary files .."
        rm -rf $AP_BASE/var/locks/ppp/*
        echo -n "."
        rm -rf $AP_BASE/var/msg/*
        echo -n "."
        rm -rf $AP_BASE/var/tmp/*
        echo -n "."
        rm -rf $AP_BASE/var/logs/*cache*
        echo -n "."
        rm -rf $AP_BASE/var/logs/*mutex*
        echo -n "."
        rm -rf $AP_BASE/var/db/*
        echo -n "."
        if [ -f $AP_BASE/var/logs/httpd.log ] 
        then 
                mv -f $AP_BASE/var/logs/httpd.log $AP_BASE/var/logs/httpd.log.1
                echo  "."
        fi

        echo -n "Starting firebase: "
        ${firebase} -d
	if [ -z "`ps -e | grep firebase | grep -v grep`" ]
        then
                echo_failure
        else
                echo_success
	fi

        echo  -n "Starting httpd: "
        ${httpd} ${HTTPD_PARAM}
	if [ -z "`ps -e | grep httpd | grep -v grep`" ]
        then
                echo_failure
        else
                echo_success
	fi

        echo  -n "Starting SMM: "
        ${smm} -d
	if [ -z "`ps -e | grep smm | grep -v grep`" ]
        then
                echo_failure
        else
                echo_success
	fi

        echo -n "Starting ftpsession: "
        ${ftpsession} -d
	if [ -z "`ps -e | grep ftpsession | grep -v grep`" ]
        then
                echo_failure
        else
                echo_success
	fi

        echo -n "Starting graphd: "
        ${graphd} -d
	if [ -z "`ps -e | grep graphd | grep -v grep`" ]
        then
                echo_failure
        else
                echo_success
	fi

	return $RETVAL
}

function condstart() {
	if [ -z "`ps -e | grep firebase | grep -v grep`" ]
        then
                echo -n "Starting Firebase: " 
                ${firebase} -d
        else
                echo -n "Firebase is already running"
                echo_success
	fi

	if [ -z "`ps -e | grep httpd | grep -v grep`" ]
        then
                echo -n "Starting httpd: " 
                ${httpd} -DSSL
        else
                echo -n "HTTP is already running"
                echo_success
	fi

	if [ -z "`ps -e | grep smm | grep -v grep`" ]
        then
                echo -n "Starting SMM: " 
                ${smm} -d
        else
                echo -n "System Management Module is already running"
                echo_success
	fi


	if [ -z "`ps -e | grep ftpsession | grep -v grep`" ]
        then
                echo -n "Starting FTP Session: " 
                ${ftpsession} -d
        else
                echo -n "FTP Session is already running"
                echo_success
	fi

	if [ -z "`ps -e | grep graphd | grep -v grep`" ]
        then
                echo -n "Starting Graphd: " 
                ${graphd} -d
        else
                echo -n "Graphd is already running"
                echo_success
	fi


}

function status() {
        echo -n "Firebase Status" 
	if [ -z "`ps -e | grep firebase | grep -v grep`" ]
        then
                echo_dead
        else
                echo_running
	fi

        echo -n "HTTPD Status" 
	if [ -z "`ps -e | grep httpd | grep -v grep`" ]
        then
                echo_dead
        else
                echo_running
	fi

        echo -n "SMM Status" 
	if [ -z "`ps -e | grep smm | grep -v grep`" ]
        then
                echo_dead
        else
                echo_running
	fi

        echo -n "FTP Session is running" 
	if [ -z "`ps -e | grep ftpsession | grep -v grep`" ]
        then
                echo_dead
        else
                echo_running
	fi

        echo -n "Graphd Status" 
	if [ -z "`ps -e | grep graphd | grep -v grep`" ]
        then
                echo_dead
        else
                echo_running
	fi
}

function stop() {

	echo  -n "Stopping Firebase :"
	pkill -9 firebase
        echo_success

	echo  -n "Stopping SMM: "
	pkill -9 smm
        echo_success

	echo  -n "Stopping FTP Session:"
	pkill  -9 ftpsession
        echo_success

	echo  -n "Stopping HTTPD: "
	pkill  -9 httpd
        echo_success

	echo  -n "Stopping Graphd :"
	pkill -9 graphd
        echo_success

        echo " "
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
	stop
	start
	;;
    condstart)
        condstart
	;;
    status)
        status
        ;;
    *)
	echo $"Usage: $0 {start|stop|restart|status|condstart}"
	RETVAL=1
esac

exit $RETVAL
