#!/bin/bash
# Global configuration file for strongswan UML testing.
#
# Copyright (C) 2004  Eric Marchionni, Patrik Rayo
# Zuercher Hochschule Winterthur
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.  See <http://www.fsf.org/copyleft/gpl.txt>.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# RCSID $Id: testing.conf,v 1.1 2007-06-25 11:18:20 encounter Exp $

# Root directory of testing
UMLTESTDIR=~/strongswan-testing

# Bzipped kernel sources
# (file extension .tar.bz2 required)
KERNEL=$UMLTESTDIR/linux-2.6.17.11.tar.bz2

# Extract kernel version
KERNELVERSION=`basename $KERNEL .tar.bz2 | sed -e 's/linux-//'`

# Kernel configuration file
KERNELCONFIG=$UMLTESTDIR/.config-2.6.17

# Bzipped uml patch for kernel
# (not needed anymore for 2.6.9 kernel or higher)
UMLPATCH=

# Bzipped source of strongSwan
STRONGSWAN=$UMLTESTDIR/strongswan-4.0.3.tar.bz2

# strongSwan compile options (use "yes" or "no")
USE_LIBCURL="yes"
USE_LDAP="yes"
USE_LEAK_DETECTIVE="no"

# Gentoo linux root filesystem
ROOTFS=$UMLTESTDIR/gentoo-fs-20060330.tar.bz2

# Size of the finished root filesystem in MB
ROOTFSSIZE=544

# Amount of Memory to use per UML [MB].
# If "auto" is stated 1/12 of total host ram will be used.
# Examples: MEM=64, MEM="128", MEM="auto"
MEM=64

# Directory where the UML kernels and file system will be built
BUILDDIR=$UMLTESTDIR/umlbuild

# Filename of the built UML Kernel
UMLKERNEL=$BUILDDIR/linux-uml-$KERNELVERSION

# Directory where test results will be stored
TESTRESULTSDIR=$UMLTESTDIR/testresults

# Path to a full strongswan tree on the host system, which is
# mounted into /root/strongswan-shared. This gives us an easy
# way to apply and test changes instantly.
#SHAREDTREE=/home/mwilli/strongswan/trunk

# Timezone for the UMLs, look in /usr/share/zoneinfo!
TZUML="Europe/Zurich"

##############################################################
# Enable particular steps in the make-testing and
# start-testing scripts
#
ENABLE_BUILD_UMLKERNEL="yes"
ENABLE_BUILD_SSHKEYS="yes"
ENABLE_BUILD_HOSTCONFIG="yes"
ENABLE_BUILD_UMLROOTFS="yes"
ENABLE_BUILD_UMLHOSTFS="yes"
ENABLE_START_TESTING="yes"
ENABLE_DO_TESTS="yes"
ENABLE_STOP_TESTING="no"

##############################################################
# How to start the UMLs?
#
# Start the UML instance in KDE konsole (requires KDE)
UMLSTARTMODE="konsole"
# Start the UML instance in an xterm (requires X11R6)
# UMLSTARTMODE="xterm"
# Start the UML instance without a terminal window
# but screen -r <host> can open a window anytime
# UMLSTARTMODE="screen"

##############################################################
# If set to "yes" only the tests stated at $SELECTEDTESTS
# will be executed. (use "yes" or "no")
#
SELECTEDTESTSONLY="no"

# Tests to do if $SELECTEDTESTSONLY is set "yes".
#
SELECTEDTESTS="net2net-cert"

##############################################################
# hostname and corresponding IPv4 and IPv6 addresses
# You may change the IPs but keep them in the same subnet,
# this means retain the netmasks!
# Also don't use IPs ending with 254, they are reserved!
#
HOSTNAMEIPV4="\
alice,10.1.0.10 \
venus,10.1.0.20 \
moon,192.168.0.1,10.1.0.1 \
carol,192.168.0.100,10.3.0.1 \
winnetou,192.168.0.150 \
dave,192.168.0.200,10.3.0.2 \
sun,192.168.0.2,10.2.0.1 \
bob,10.2.0.10"

HOSTNAMEIPV6="\
alice,fec1::10 \
venus,fec1::20 \
moon,fec0::1,fec1::1 \
carol,fec0::10,fec3::1 \
winnetou,fec0::15 \
dave,fec0::20,fec3::2 \
sun,fec0::2,fec2::1 \
bob,fec2::10"

##############################################################
# VPN gateways / clients
# The hosts stated here will be created. Possible values
# are sun, moon, dave, carol, alice, venus, bob, winnetou.
# It's fine to make them all unless you don't have much
# ressources. In this case we assume you know what you do!
#
STRONGSWANHOSTS="sun moon dave carol alice venus bob winnetou"

##############################################################
# Needed programs, do not change!
#
PROGRAMS="uml_switch uml_mconsole ssh ssh-keygen iptables \
          chroot screen mkreiserfs"

##############################################################
# IP parameters of the UML switches
#
IFCONFIG_0="192.168.0.254 netmask 255.255.255.0"
IFCONFIG_1="10.1.0.254 netmask 255.255.0.0"
IFCONFIG_2="10.2.0.254 netmask 255.255.0.0"

##############################################################
# Network interfaces of the UML instances
#
SWITCH_alice="eth0=daemon,,unix,/tmp/umlswitch1"
SWITCH_venus="eth0=daemon,,unix,/tmp/umlswitch1"
SWITCH_moon="eth0=daemon,,unix,/tmp/umlswitch0 \
             eth1=daemon,,unix,/tmp/umlswitch1"
SWITCH_carol="eth0=daemon,,unix,/tmp/umlswitch0"
SWITCH_winnetou="eth0=daemon,,unix,/tmp/umlswitch0"
SWITCH_dave="eth0=daemon,,unix,/tmp/umlswitch0"
SWITCH_sun="eth0=daemon,,unix,/tmp/umlswitch0 \
            eth1=daemon,,unix,/tmp/umlswitch2"
SWITCH_bob="eth0=daemon,,unix,/tmp/umlswitch2"




